{#
This Update changelog template uses the following logic:

1. Read previous changelog file (ex. project_root/CHANGELOG.md)
2. Split on insertion flag (ex. <!-- version list -->)
3. Print top half of previous changelog
3. New Changes (unreleased commits & newly released)
4. Print bottom half of previous changelog

Note: if a previous file was not found, it does not write anything at the bottom but render does NOT fail
#}{# Read previous changelog and split on insertion_flag #}
{% set prev_changelog_contents = prev_changelog_file | read_file | safe %}
{% set changelog_parts = prev_changelog_contents.split(insertion_flag, maxsplit=1) %}

{% if changelog_parts | length < 2 %}
{% if prev_changelog_contents | length > 0 %}
{{ changelog_parts[0] }}
{% else %}
{% include "changelog_init.md.j2" %}
{% endif %}
{% else %}
{# Print previous changelog header + flag (trim blank lines) #}
{% set prev_changelog_top = changelog_parts[0] | trim %}
{% if prev_changelog_top | length > 0 %}
{{ prev_changelog_top }}
{{ '\n' ~ insertion_flag | trim }}
{% else %}
{{ insertion_flag | trim }}
{% endif %}

{# Insert unreleased changes (if any) #}
{%- include "unreleased_changes.md.j2" -%}

{%- if releases | length > 0 %}
{% set release = releases[0] %}
{%- if releases | length == 1 and ctx.mask_initial_release %}
{%- include "first_release.md.j2" -%}
{%- elif "# " ~ release.version.as_semver_tag() ~ " " not in changelog_parts[1] %}
{%- include "versioned_changes.md.j2" -%}
{%- endif %}
{%- endif %}

{# Print previous changelog footer if not empty (trim blank lines) #}
{% set previous_changelog_bottom = changelog_parts[1] | trim %}
{% if previous_changelog_bottom | length > 0 %}
{{ '\n' ~ previous_changelog_bottom }}
{% endif %}
{% endif %}
